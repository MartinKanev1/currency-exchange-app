document.addEventListener("DOMContentLoaded", async () => {
    await loadHistory();
});

async function loadHistory() {
    try {
        const response = await fetch("http://localhost:8080/api/transactions/all");
        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.message || "Failed to fetch transactions.");
        }
        const transactions = await response.json();

        const tableBody = document.querySelector("#historyTable tbody");
        tableBody.innerHTML = ""; // –ò–∑—á–∏—Å—Ç–≤–∞–º–µ —Ç–∞–±–ª–∏—Ü–∞—Ç–∞ –ø—Ä–µ–¥–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ

        transactions.forEach(tx => {
            tableBody.innerHTML += `
                <tr>
                    <td>${tx.transactionId}</td>
                    <td>${new Date(tx.date).toLocaleString()}</td>
                    <td>${tx.sourceCurrency}</td>
                    <td>${tx.targetCurrency}</td>
                    <td>${tx.amount}</td>
                    <td>${tx.convertedAmount}</td>
                    <td>
                        <button onclick="deleteTransaction(${tx.transactionId})">üóëÔ∏è Delete</button>
                    </td>
                </tr>
            `;
        });
    } catch (error) {
        console.error("Error loading transactions:", error);
        alert("–ù–µ—É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∏—Å—Ç–æ—Ä–∏—è—Ç–∞. –ü—Ä–æ–≤–µ—Ä–µ—Ç–µ –≤—Ä—ä–∑–∫–∞—Ç–∞ —Å API.");
    }
}

async function deleteTransaction(transactionId) {
    if (!confirm("‚ö†Ô∏è –°–∏–≥—É—Ä–Ω–∏ –ª–∏ —Å—Ç–µ, —á–µ –∏—Å–∫–∞—Ç–µ –¥–∞ –∏–∑—Ç—Ä–∏–µ—Ç–µ —Ç–∞–∑–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è?")) return;

    try {
        const response = await fetch(`http://localhost:8080/api/transactions/${transactionId}`, {
            method: "DELETE",
        });

        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.message || "Failed to delete transaction.");
        }

        alert("‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ç–∞ –±–µ—à–µ –∏–∑—Ç—Ä–∏—Ç–∞ —É—Å–ø–µ—à–Ω–æ!");
        await loadHistory(); // –û–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ —Ç–∞–±–ª–∏—Ü–∞—Ç–∞
    } catch (error) {
        console.error("Error deleting transaction:", error);
        alert(`‚ùå –ù–µ—É—Å–ø–µ—à–Ω–æ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ: ${error.message}`);
    }
}
